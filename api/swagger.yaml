openapi: 3.0.0
info:
  description: Aгрегатор логистических заказов
  title: logistics-aggregator
  contact:
    email: f.kurbanov120303@yandex.ru
  version: "1.0"
paths:
  /auth:
    get:
      tags:
        - Пользователи
      description: Возвращает страницу с профилем пользователя
      responses:
        "200":
          description: |
    post:
      tags:
        - Пользователи
      description: |
      requestBody:
        content:
          application/json:
            schema:
              properties:
                username:
                  type: array
                password:
                  type: string
      responses:
        "200":
          description: Вставка или обновление прошли успешно.
        "400":
          description: Невалидная схема документа или входные данные не верны.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Validation Failed"
                    }
  /main:
    get:
      tags:
        - Пользователи
      description: Возвращает главную страницу.
      responses:
        "200":
          description: Пользователь авторизован и страница успешно загружена.
        "403":
          description: Пользователь не авторизован.
        "500":
          description: Не найдены шаблонные файлы необходимые для рендеринга страницы.
  /logout:
    get:
      tags:
        - Пользователи
      description: Выход из системы
      responses:
        "200":
          description: Выход произошел успешно.

  /advert:
    get:
      tags:
        - Пользователи
      description: Возвращает страницу для добавления нового объявления.
      responses:
        "200":
          description: Страница загрузилась успешно.
        "403":
          description: Пользователь не авторизован.
        "404":
          description: Страница не найдена.
    post:
      tags:
        - Пользователи
      description: Добавление нового объявления в базу данных.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          description: Добавление прошло успешно.
        "400":
          description: Невалидная схема документа или входные данные неверны.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Validation Failed"
                    }
  /car:
    post:
      tags:
        - Пользователи
      description: Добавление нового грузовика в базу данных.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Car"
      responses:
        "200":
          description: Добавление прошло успешно.
        "400":
          description: Невалидная схема документа или входные данные неверны.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Validation Failed"
                    }

  /registration:
    get:
      tags:
        - Пользователи
      description: Страница для регистрации пользователя
      responses:
        "200":
          description: Страница загрузилась успешно.
        "404":
          description: Страница не найдена.
    post:
      tags:
        - Пользователи
      description: Регистрация пользователя
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Регистрация прошла успешно.
        "400":
          description: Невалидная схема документа или входные данные неверны.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Validation Failed"
                    }

  /order/{id}:
    get:
      tags:
        - Пользователи
      description: |
      parameters:
        - description: Идентификатор
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
          description: Запрос данных прошел успешно.
        "400":
          description: Невалидная схема документа или входные данные неверны.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - Пользователи
      description: |
      parameters:
        - description: Идентификатор
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Удаление прошло успешно.
        "400":
          description: Невалидная схема документа или входные данные неверны.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 400,
                      "message": "Validation Failed"
                    }
        "404":
          description: Элемент не найден.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "code": 404,
                      "message": "Item not found"
                    }

components:
  schemas:
    UserType:
      type: string
      description: Тип пользователя
      enum:
        - STANDARD
        - ADMIN

    UserState:
      type: string
      description: Состояние пользователя
      enum:
        - ACTIVE
        - BANNED
        - SUSPENDED

    User:
      type: object
      description: Пользователь системы
      required:
        - id
        - username
        - password
        - name
        - surname
        - userType
      properties:
        id:
          type: integer
          nullable: false
          description: Уникальный идентификатор пользователя
        username:
          description: Уникальный никнейм пользователя
          type: string
          nullable: false
        password:
          type: string
          nullable: false
          description: Пароль пользователя
          example: "2022-05-28T21:12:01.000Z"
        name:
          type: string
          nullable: false
          description: Имя пользователя
          example: "Иван"
        surname:
          type: string
          nullable: false
          description: Фамилия пользователя
          example: "Иванов"
        userState:
          $ref: "#/components/schemas/UserState"
        userType:
          $ref: "#/components/schemas/UserType"

    TrailerType:
      type: string
      description: Тип прицепа грузовика
      enum:
        - DryVan
        - Flatbed
        - Refrigerated
        - DropDeck
        - Step-Deck
        - DoubleDrop
        - Lowboy
        - HotShot
        - Conestoga
        - Curtainside

    LoadingPlaces:
      type: string
      description: Места погрузки прицепа автомобиля
      enum:
        - BACK
        - LEFT
        - RIGHT
        - TOP

    Position:
      type: object
      description: Координаты точки на карте
      required:
        - id
        - latitude
        - longitude
      properties:
        id:
          type: integer
          nullable: false
          description: Уникальный идентификатор записи координат
        latitude:
          description: Широта
          type: number
          nullable: false
        longitude:
          description: Долгота
          type: number
          nullable: false

    Specification:
      required:
        - id
        - length
        - height
        - width
        - color
        - bodyType
        - loadingPlaces
      properties:
        id:
          type: integer
          nullable: false
          description: Уникальный идентификатор автомобиля
        length:
          description: Длина прицепа автомобиля
          type: number
          nullable: false
        height:
          description: Высота прицепа автомобиля
          type: number
          nullable: false
        width:
          description: Ширина прицепа автомобиля
          type: number
          nullable: false
        color:
          description: Цвет прицепа автомобиля
          format: rgb
          type: string
          nullable: false
          example: "#FFFFFF"
        bodyType:
          $ref: "#/components/schemas/TrailerType"
        loadingPlaces:
          $ref: "#/components/schemas/LoadingPlaces"

    Car:
      required:
        - id
        - owner
        - licensePlate
        - position
        - specification
      properties:
        id:
          type: integer
          nullable: false
          description: Уникальный идентификатор автомобиля
        owner:
          $ref: "#/components/schemas/User"
        licensePlate:
          description: Государственный регистрационный знак автомобиля
          type: string
          nullable: false
        position:
          $ref: "#/components/schemas/Position"
        specification:
          $ref: "#/components/schemas/Specification"

    OrderState:
      type: string
      description: Состояние заказа
      enum:
        - REQUESTED
        - IN_PROGRESS
        - COMPLETED

    Order:
      required:
        - id
        - owner
        - title
        - description
        - price
        - state
        - from
        - to
        - specification
      properties:
        id:
          type: integer
          nullable: false
          description: Уникальный идентификатор автомобиля
        owner:
          $ref: "#/components/schemas/User"
        title:
          description: Заголовок заказа
          type: string
          nullable: false
        description:
          description: Описание заказа
          type: string
          nullable: false
        price:
          description: Цена за исполнение заказа
          type: number
          nullable: false
        state:
          $ref: "#/components/schemas/OrderState"
        from:
          $ref: "#/components/schemas/Position"
        to:
          $ref: "#/components/schemas/Position"
        specification:
          $ref: "#/components/schemas/Specification"

    Feedback:
      required:
        - id
        - author
        - receiver
        - order
        - description
        - points
      properties:
        id:
          type: integer
          nullable: false
          description: Уникальный идентификатор отзыва
        author:
          $ref: "#/components/schemas/User"
        receiver:
          $ref: "#/components/schemas/User"
        order:
          $ref: "#/components/schemas/Order"
        description:
          type: string
          nullable: false
          description: Комментарий к отзыву
        points:
          type: integer
          nullable: false
          description: Оценка заказа

    Error:
      required:
        - code
        - message
      properties:
        code:
          nullable: false
          type: integer
        message:
          nullable: false
          type: string